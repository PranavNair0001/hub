name: hub-release-automation

on:
  workflow_dispatch    # Manual trigger event to execute workflow

concurrency:
  group: automation

jobs:

  setup-build-and-list-files:    # Job to build packages.json file, find and list missing files
    runs-on: new-runner    # Self hosted runner on GKE cluster
    steps:

    - name: Repository Checkout    # Action to access file structure of repository in runner
      uses: actions/checkout@v2.3.4

    - name: Run Script    # Step to execute build.py script that performs build operations of this job
      run: python3 ./.github/scripts/build.py

    - name: Store packages.json as Artifact    # Action to upload packages.json as an artifact for further use
      uses: actions/upload-artifact@v3
      with:
        name: packages.json
        path: ./packages.json

    - name: Run Script    # Step to execute list.py script that performs find and list operations of this job
      run: python3 ./.github/scripts/list.py

    - name: Setting Output    # Step to set resultant list as output of job
      id: set-matrix
      run: echo "::set-output name=matrix::${output}"

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}    # JSON output containing contents of strategy matrix of next job

  fetch-files:    # Job to fetch each missing file individually in parallel
    needs: setup-build-and-list-files
    if: ${{ needs.setup-build-and-list-files.outputs.matrix != '[]' && needs.setup-build-and-list-files.outputs.matrix != '' && success() }}    # Skip job if no file to be fetched
    runs-on: new-runner

    strategy:
      matrix:
        artifact: ${{ fromJSON(needs.setup-build-and-list-files.outputs.matrix) }}

    env:
      ID: ${{ matrix.artifact.repo.id }}
      EXTENSION: ${{ matrix.artifact.repo.file_type }}
      DIR: ${{ matrix.artifact.artifactDir }}
      FILEPATH: ${{ matrix.artifact.path }}
      FILENAME: ${{ matrix.artifact.artifact }}

    steps:

    - name: Creating Working Directory    # Step to create a temporary working directory
      run: mkdir artifact

    - name: Sync with GCS    # Step to sync GCS bucket directory that is expected to contain missing file with working directory
      run: gsutil rsync gs://project-step-pranav-hub-cdap-io/$DIR artifact/

    - name: Fetching Missing Files    # Step to find and fetch the missing file
      run: |
        echo "Fetching: ${FILEPATH}"
        if [ -f "artifact/${FILENAME}" ]; then
          echo "${FILENAME} : Found in GCS Bucket"
        else
          echo "${FILENAME} : Not found in GCS Bucket, Fetching from Maven Central"
          mvn org.apache.maven.plugins:maven-dependency-plugin:2.8:copy -Dartifact=${ID}:${VERSION}:${EXTENSION} -DoutputDirectory=./artifact/
        fi

    - name: Upload File    # Action to upload the fetched missing file as an artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact.artifact }}
        path: ${{ matrix.artifact.target_path }}

  merge-files:    # Job to place all artifacts in appropriate location, and push to GCS buckets
    needs: fetch-files
    if: success()
    runs-on: new-runner
    steps:

    - name: Repository Checkout    # Action to access file structure of repository in runner
      uses: actions/checkout@v2.3.4

    - name: Download Artifact    # Action to download all the fetched missing files to a temporary artifacts directory
      uses: actions/download-artifact@v3
      with:
        path: artifacts/

    - name: Run Script    # Step to execute merge.py script that performs operations of this job
      run: python3 ./.github/scripts/merge.py

    - name: Syncing master bucket
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 300
        max_attempts: 3
        retry_on: any
        on_retry_command: echo "The upload to central bucket has failed"
        command: python3 ./.github/scripts/sync.py

    - name: Setting Output    # Step to set resultant list as output of job
      id: set-buckets
      run: echo "::set-output name=buckets::${buckets}"

    outputs:
      matrix: ${{ steps.set-buckets.outputs.buckets }}    # JSON output containing contents of strategy matrix of next job


  sync-regional-buckets:    # Job to sync all regional GCS buckets with central GCS bucket, in parallel
    runs-on: new-runner
    needs: merge-files
    if: success()

    strategy:
      matrix:
        loc: ${{ fromJSON(needs.merge-files.outputs.matrix) }}

    steps:
    - name: Syncing buckets, max 3 retries    # Action to sync bucket, and retry upto 3 times if failed
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 300
        max_attempts: 3
        retry_on: any
        on_retry_command: echo "The upload to ${{ matrix.loc.regional_address }} has failed"
        command: gsutil -m rsync -r -d -n -c ${{ matrix.loc.central_address }}/ ${{ matrix.loc.regional_address }}/

  failure_mode: # Job to mail and notify concerned persons, if workflow fails
    runs-on: new-runner
    if: ${{ always() && contains(join(needs.*.result, ','), 'failure') }}
    needs: [ sync-regional-buckets, merge-files]
    steps:
    - name: Revert changes checkout # Action to access file structure of repository in runner
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Last successful commit ID # Action to find last successful commit of workflow
      uses: grace-matson/last-successful-build-action@v2.0.7
      id: last_successful_commit
      with:
        token: ${{ github.token }}
        branch: ${{ github.ref_name }}
        workflow: ${{ github.workflow }}
        verify: true

    - name: Commit hash
      run: |
        echo "Last commit before current run: ${{github.sha}}"
        echo "Last successful commit: ${{ steps.last_successful_commit.outputs.sha }}"

    - name: Revert changes #Action to revert file structure to commit on which workflow was last successful
      if: always()
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "<>"
        git read-tree -u --reset ${{ steps.last_successful_commit.outputs.sha }}
        git status
        git add .
        git commit -m "Trying to revert to ${{ steps.last_successful_commit.outputs.sha }}"


    - name: Create Pull Request for Revert # Action to create a pull request for revert of breaking changes
      uses: peter-evans/create-pull-request@v3.10.0
      id: create_pr
      with:
        token: ${{ github.token }}
        title: 'Automated PR due to failed workflow - ${{ github.workflow }}'
        body: |
          This PR is to revert from commit ${{github.sha}} to ${{ steps.last_successful_commit.outputs.sha }} 
          because workflow ${{ github.workflow }} failed on run ${{github.run_id}}
          Please delete branch revert-${{github.run_id}} once PR is merged.
        branch: revert-${{github.run_id}}

    - name: Failure, sending email #Action to send email to concerned persons with information regarding failed workflow
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{secrets.MAIL_USERNAME}}
        password: ${{secrets.MAIL_PASSWORD}}
        subject: Failure of Github workflow run ${{ github.workflow	}} in ${{github.repository}}
        to: gracematson@google.com, pranavnair@google.com
        from: Hub Release Automation Process
        secure: true
        body: |
          Repository : ${{github.repository}} 
          Repo URL : ${{ github.repositoryUrl }}
          Workflow : ${{ github.workflow	}}
          Run : ${{ github.run_id }}
          Last commit before failed workflow execution : ${{github.sha}}
          Last commit before successful workflow : ${{ steps.last_successful_commit.outputs.sha }}
          PR created on branch revert-${{github.run_id}}
          URL of PR : ${{ steps.create_pr.outputs.pull-request-url }}
          PR number : ${{ steps.create_pr.outputs.pull-request-number }}
      
      
      



