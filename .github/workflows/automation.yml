name: hub-release-automation

on:
  workflow_dispatch    # Manual trigger event to execute workflow

jobs:

  setup-and-build:    # Job to build packages.json file
    runs-on: new-runner    # Self hosted runner on GKE cluster
    steps:

    - name: Repository Checkout    # Action to access file structure of repository in runner
      uses: actions/checkout@v2.3.4

    - name: Run Script    # Step to execute build.py script that performs operations of this job
      run: python3 ./.github/scripts/build.py

    - name: Store packages.json as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: packages.json
        path: ./packages.json

  list-files:
    needs: setup-and-build
    if: success()
    runs-on: new-runner
    steps:

    - name: Repository Checkout    # Action to access file structure of repository in runner
      uses: actions/checkout@v2.3.4

    - name: Run Script    # Step to execute list.py script that performs operations of this job
      run: python3 ./.github/scripts/list.py

    - name: Setting Output    # Step to set resultant list as output of job
      id: set-matrix
      run: echo "::set-output name=matrix::${output}"

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  fetch-files:
    needs: list-files
    if: ${{ needs.list-files.outputs.matrix != '[]' && needs.list-files.outputs.matrix != '' && success() }}
    runs-on: new-runner

    strategy:
      fail-fast: false
      matrix:
        artifact: ${{ fromJSON(needs.list-files.outputs.matrix) }}

    env:
      ID: ${{ matrix.artifact.repo.id }}
      EXTENSION: ${{ matrix.artifact.repo.file_type }}
      DIR: ${{ matrix.artifact.artifactDir }}
      FILEPATH: ${{ matrix.artifact.path }}
      FILENAME: ${{ matrix.artifact.artifact }}

    steps:

    - name: Creating Working Directory
      run: mkdir artifact

    - name: Sync with GCS
      run: gsutil rsync gs://project-step-pranav-hub-cdap-io/$DIR artifact/

    - name: Fetching Missing Files    # Step to find and fetch the missing file
      run: |
        echo "Fetching: ${FILEPATH}"
        if [ -f "artifact/${FILENAME}" ]; then
          echo "${FILENAME} : Found in GCS Bucket"
        else
          echo "${FILENAME} : Not found in GCS Bucket, Fetching from Maven Central"
          mvn org.apache.maven.plugins:maven-dependency-plugin:2.8:copy -Dartifact=${ID}:${VERSION}:${EXTENSION} -DoutputDirectory=./artifact/
        fi

    - name: Upload File    # Action to upload the fetched missing file as an artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact.artifact }}
        path: ${{ matrix.artifact.target_path }}

  merge-files:
    needs: fetch-files
    if: success()
    runs-on: new-runner
    steps:

    - name: Repository Checkout    # Action to access file structure of repository in runner
      uses: actions/checkout@v2.3.4

    - name: Download Artifact    # Action to download all the fetched missing files to a temporary artifacts directory
      uses: actions/download-artifact@v3
      with:
        path: artifacts/

    - name: Run Script    # Step to execute merge.py script that performs operations of this job
      run: python3 ./.github/scripts/merge.py

  sync-regional-buckets:
    runs-on: new-runner
    needs: merge-files
    if: success()

    strategy:
      fail-fast: false
      matrix:
        loc: [ "dir1" , "dir2", "dir3", "dir4","dir5", "dir6", "dir7", "dir8", "dir9" ]

    steps:

    - name: Syncing buckets, max 3 retries
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 15
        max_attempts: 3
        retry_on: error
        on_retry_command: echo "The upload to ${{matrix.loc}} has failed"
        command: gsutil -m rsync -d -r gs://project-step-pranav-hub-cdap-io-master/ gs://project-step-pranav-hub-cdap-io-${{ matrix.loc }}/

  failure_mode:
    runs-on: new-runner
    if: ${{ always() && contains(join(needs.*.result, ','), 'failure') }}
    needs: sync-regional-buckets

    steps:
    - run: echo ${{needs.matrix_regional_buckets.result}}
    - name: Failure, sending email
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{secrets.MAIL_USERNAME}}
        password: ${{secrets.MAIL_PASSWORD}}
        subject: Github Action FAILED
        to: pranavnair@google.com
        from: HUB DEMO OFFICIAL
        secure: true
        body: Build job of ${{github.repository}} was a failure on job


      #   main_bucket:
#     runs-on: new-runner
#     steps:
#       - uses: actions/checkout@v2
#       - name: Copy file to gcs bucket
#         run: gsutil -m rsync -r ./testdir gs://demo-automate-hub-release-test-master/
    
#   matrix_regional_buckets:
#     runs-on: new-runner  
#     needs: main_bucket
#     strategy:
#       fail-fast: false
#       matrix:
#         loc: [ "dir1" , "dir2", "dir3", "dir4","dir5", "dir6", "dir7", "dir8", "dir9"]
#     steps:
#       # - name: Syncing buckets
#       #   run: gsutil -m rsync -r gs://demo-automate-hub-release-test-master/ gs://demo-automate-hub-release-test-${{ matrix.loc }}/
#       - name: Syncing buckets, max 3 retries
#         uses: nick-fields/retry@v2
#         with:
#           timeout_seconds: 15
#           max_attempts: 3
#           retry_on: error
#           on_retry_command: echo "The upload to ${{matrix.loc}} has failed"
#           command: gsutil -m rsync -r gs://demo-automate-hub-release-test-master/ gs://demo-automate-hub-release-test-${{ matrix.loc }}/

#   failure_mode:
#     runs-on: new-runner  
#     if: ${{ always() && contains(join(needs.*.result, ','), 'failure') }}
#     needs: matrix_regional_buckets
#     steps:
#       - run: echo ${{needs.matrix_regional_buckets.result}}
#       - name: Failure, sending email
#         uses: dawidd6/action-send-mail@v3
#         with:
#           server_address: smtp.gmail.com
#           server_port: 465
#           username: ${{secrets.MAIL_USERNAME}}
#           password: ${{secrets.MAIL_PASSWORD}}
#           subject: Github Action FAILED 
#           to: gracematson@google.com
#           from: HUB DEMO OFFICIAL 
#           secure: true
#           body: Build job of ${{github.repository}} was a failure on job

#       - name: Revert changes checkout
#         uses: actions/checkout@v2
#         with:
#           fetch-depth: 2
      
#       - name: Declare some variables
#         id: vars
#         shell: bash
#         run: |
#           echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
#           echo "::set-output name=sha_short::$(git rev-parse --short HEAD~1)"

#       - name: Another step
#         run: |
#           echo "Branch: ${{ steps.vars.outputs.branch }}"
#           echo "Sha: ${{ steps.vars.outputs.sha_short }}"

#       - name: Revert changes
#         run: |
#           git config user.name grace-matson
#           git config user.email gracematson@google.com
#           git reset --merge ${{ steps.vars.outputs.sha_short }}
#           git push -f
      


